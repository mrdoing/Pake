name: Build App With Pake CLI
on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'platform'
        required: true
        default: 'macos-latest'
        type: choice
        options:
          - 'windows-latest'
          - 'macos-latest'
          - 'ubuntu-20.04'
      url:
        description: '[URL]'
        required: true
      name:
        description: '[Name]'
        required: true
      icon:
        description: '[Icon, Optional]'
        required: false
      width:
        description: '[Width, Optional]'
        required: false
        default: '1200'
      height:
        description: '[Height, Optional]'
        required: false
        default: '780'
      safe_domain:
        description: '[Safe Domain, Optional]'
        required: false
      hide_title_bar:
        description: '[Hide TitleBar, Optional, MacOS only]'
        required: false
        type: boolean
        default: false
      multi_arch:
        description: '[MultiArch, Optional, MacOS only]'
        required: false
        type: boolean
        default: false
      targets:
        description: '[Targets, Optional, Linux only]'
        required: false
        default: 'deb'
        type: choice
        options:
          - 'deb'
          - 'appimage'
          - 'all'

jobs:
  build:
    name: ${{ inputs.platform }}
    runs-on: ${{ inputs.platform }}
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # 升级到v4

      - name: Install node
        uses: actions/setup-node@v4  # 升级到v4
        with:
          node-version: 20  # 更新为Node.js v20

      - name: Install Rust
        if: inputs.platform != 'macos-latest'
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: |
            ${{ inputs.platform == 'windows-latest' && 'x86_64-pc-windows-msvc' || 'x86_64-unknown-linux-musl' }}

      - name: Install Rust for macOS
        if: inputs.platform == 'macos-latest'
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          rustup target add x86_64-apple-darwin

      - name: Install dependencies (ubuntu only)
        if: inputs.platform == 'ubuntu-20.04'
        run: sudo apt-get update && sudo apt-get install -y \
          libwebkit2gtk-4.0-dev build-essential curl wget \
          libssl-dev libgtk-3-dev libayatana-appindicator3-dev \
          librsvg2-dev gnome-video-effects gnome-video-effects-extra

      - name: Install pake-cli locally
        run: npm install pake-cli

      - name: Cache restore
        uses: actions/cache/restore@v4  # 升级到v4
        with:
          path: |
            ~/.cargo/
            node_modules/pake-cli/src-tauri/target/
          key: ${{ inputs.platform }}-cargo-${{ hashFiles('node_modules/pake-cli/src-tauri/Cargo.lock') }}

      - name: Install dependencies
        run: |
          npm install shelljs axios

      - name: Build with pake-cli
        run: node ./script/build_with_pake_cli.js
        env:
          URL: ${{ inputs.url }}
          NAME: ${{ inputs.name }}
          ICON: ${{ inputs.icon }}
          WIDTH: ${{ inputs.width }}
          HEIGHT: ${{ inputs.height }}
          HIDE_TITLE_BAR: ${{ inputs.hide_title_bar }}
          MULTI_ARCH: ${{ inputs.multi_arch }}
          TARGETS: ${{ inputs.targets }}
          SAFE_DOMAIN: ${{ inputs.safe_domain }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4  # 升级到v4
        with:
          name: output-${{ inputs.platform }}.zip
          path: node_modules/pake-cli/output/*
          retention-days: 3

      - name: Cache store
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4  # 升级到v4
        with:
          path: |
            ~/.cargo/
            node_modules/pake-cli/src-tauri/target/
          key: ${{ inputs.platform }}-cargo-${{ hashFiles('node_modules/pake-cli/src-tauri/Cargo.lock') }}
